package versionsfile

import "runtime"

type GoArchive struct {
	OS     string
	ARCH   string
	URL    string
	SHA256 string
}

// RemoteVersionsFile is the representation of the file that gets stored in
// GitHub. That file is pregenerated by parsing go downloads page.
type RemoteVersionsFile struct {
	versions map[string][]GoArchive
}

// GetArchivesFor available archives indexed by version for the provided CPU
// architecture and OS.
func (rvf *RemoteVersionsFile) GetArchivesFor(arch, os string) map[string]GoArchive {
	foundArchives := make(map[string]GoArchive)
	for version, archives := range rvf.versions {
		archive := getArchiveForPlatform(archives)
		if archive != nil {
			foundArchives[version] = *archive
		}
	}

	return foundArchives
}

func getArchiveForPlatform(archives []GoArchive) *GoArchive {
	arch := runtime.GOARCH
	os := runtime.GOOS

	for _, archive := range archives {
		if archive.ARCH == arch && archive.OS == os {
			return &archive
		}
	}

	return nil
}
