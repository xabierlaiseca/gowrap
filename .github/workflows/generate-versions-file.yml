name: generate-versions-file

on:
#  schedule:
#    - cron: '0 0 * * *'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Generate versions file
        run: make generate-versions-file

      - id: check-versions-file
        name: Check if changes in versions file
        run: git diff-index --exit-code HEAD data/versions.json
        continue-on-error: true

      - name: Publish changes
        run: |
          set -eu

          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "Generate Versions File - ${{ github.actor }}"
          git checkout -b new-versions-$(date +%F)
          git add data/versions.json
          git commit -m "new versions file $(date +%F) [skip ci]"

          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          hub pull-request -p --no-edit --labels versions
          export PR_NUMBER=$(hub pr show -f %I)

          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          hub ci-status #$PR_NUMBER
          CI_STATUS=$?

          while [ $CI_STATUS -gt 1 ]; do
            sleep 5
            hub ci-status #$PR_NUMBER
            CI_STATUS=$?
          done

          if [ $CI_STATUS -ne 0 ]; then
            exit $CI_STATUS
          fi

          hub api -XPUT "repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/merge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: "steps.check-versions-file.outcome == 'failure'"
